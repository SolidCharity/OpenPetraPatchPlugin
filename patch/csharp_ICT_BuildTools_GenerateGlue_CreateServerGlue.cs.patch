--- before/csharp/ICT/BuildTools/GenerateGlue/CreateServerGlue.cs	2014-05-10 15:20:00.000000000 +0200
+++ plugin/csharp/ICT/BuildTools/GenerateGlue/CreateServerGlue.cs	2014-05-10 15:19:09.000000000 +0200
@@ -533,6 +533,13 @@
         InterfacePath = InterfacePath.Substring(0, InterfacePath.IndexOf("csharp/ICT/Petra")) + "csharp/ICT/Petra/Shared/lib/Interfaces";
         Template.AddToCodelet("USINGNAMESPACES", CreateInterfaces.AddNamespacesFromYmlFile(InterfacePath, tn.Name));
 
+        if (AOutputPath.Contains("ICT/Petra/Plugins/"))
+        {
+            Template.AddToCodelet("USINGNAMESPACES", "using Ict.Petra.Server.App.WebService;" + Environment.NewLine);
+            string pluginWithNamespace = TAppSettingsManager.GetValue("plugin");
+            Template.AddToCodelet("USINGNAMESPACES", "using " + pluginWithNamespace + ".Data;" + Environment.NewLine);
+        }
+
         FUsingNamespaces = new SortedList <string, string>();
         FContainsAsynchronousExecutionProgress = false;
 
@@ -563,6 +570,16 @@
             Template.AddToCodelet("USINGNAMESPACES", "using " + usingNamespace + ";" + Environment.NewLine);
         }
 
+        if (OutputFile.Replace("\\", "/").Contains("ICT/Petra/Plugins"))
+        {
+            string pluginWithNamespace = TAppSettingsManager.GetValue("plugin");
+            Template.SetCodelet("WEBSERVICENAMESPACE", pluginWithNamespace + ".WebService");
+        }
+        else
+        {
+            Template.SetCodelet("WEBSERVICENAMESPACE", "Ict.Petra.Server.App.WebService");
+        }
+
         Template.FinishWriting(OutputFile, ".cs", true);
     }
 
@@ -585,7 +602,7 @@
 
             if ((module == "all") || (tn.Name == module))
             {
-                SortedList <string, TypeDeclaration>connectors = TCollectConnectorInterfaces.GetConnectors(tn.Name);
+                SortedList <string, TypeDeclaration>connectors = TCollectConnectorInterfaces.GetConnectors(AOutputPath, tn.Name);
                 CreateServerGlue(tn, connectors, AOutputPath);
             }
         }
