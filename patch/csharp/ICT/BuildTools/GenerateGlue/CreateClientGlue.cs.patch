--- openpetraNow.PatchRemoting/csharp/ICT/BuildTools/GenerateGlue/CreateClientGlue.cs	2014-05-16 08:52:04.000000000 +0200
+++ openpetraNow.PatchPlugin/csharp/ICT/BuildTools/GenerateGlue/CreateClientGlue.cs	2014-05-16 11:34:44.000000000 +0200
@@ -200,7 +200,7 @@
         List <TypeDeclaration>ConnectorClasses = TCollectConnectorInterfaces.FindTypesInNamespace(connectors, ConnectorNamespace);
 
         ConnectorNamespace = ConnectorNamespace.
-                             Replace("Ict.Petra.Shared.", "Ict.Petra.Server.");
+                             Replace(".Shared.", ".Server.");
 
         foreach (TypeDeclaration connectorClass in ConnectorClasses)
         {
@@ -370,7 +370,7 @@
         List <TypeDeclaration>ConnectorClasses = TCollectConnectorInterfaces.FindTypesInNamespace(connectors, ConnectorNamespace);
 
         ConnectorNamespace = ConnectorNamespace.
-                             Replace("Ict.Petra.Shared.", "Ict.Petra.Server.");
+                             Replace(".Shared.", ".Server.");
 
         foreach (TypeDeclaration connectorClass in ConnectorClasses)
         {
@@ -499,12 +499,23 @@
         InterfacePath = InterfacePath.Substring(0, InterfacePath.IndexOf("csharp/ICT/Petra")) + "csharp/ICT/Petra/Shared/lib/Interfaces";
         Template.AddToCodelet("USINGNAMESPACES", CreateInterfaces.AddNamespacesFromYmlFile(InterfacePath, tn.Name));
 
+        if (AOutputPath.Contains("ICT/Petra/Plugins/"))
+        {
+            // add namespaces that are required by the plugin
+            InterfacePath = Path.GetFullPath(AOutputPath + "/../").Replace(Path.DirectorySeparatorChar, '/');
+            Template.AddToCodelet("USINGNAMESPACES", CreateInterfaces.AddNamespacesFromYmlFile(InterfacePath, "Plugin"));
+        }
+
         string SharedPathName = "Ict.Petra.Shared.M" + tn.Name;
 
         if (SharedPathName.Contains("ServerAdmin"))
         {
             SharedPathName = "Ict.Petra.Server.App.Core." + tn.Name;
         }
+        else if (OutputFile.Contains("ICT/Petra/Plugins"))
+        {
+            SharedPathName = "Ict.Petra.Plugins." + tn.Name;
+        }
 
         InsertSubNamespaces(Template, connectors, tn.Name, SharedPathName, tn);
 
@@ -522,6 +533,11 @@
         {
             Template.SetCodelet("REMOTEOBJECTSNAMESPACE", "Ict.Petra.ServerAdmin.App.Core.RemoteObjects");
         }
+        else if (OutputFile.Contains("ICT/Petra/Plugins"))
+        {
+            string pluginWithNamespace = TAppSettingsManager.GetValue("plugin");
+            Template.SetCodelet("REMOTEOBJECTSNAMESPACE", pluginWithNamespace + ".RemoteObjects");
+        }
         else
         {
             Template.SetCodelet("REMOTEOBJECTSNAMESPACE", "Ict.Petra.Client.App.Core.RemoteObjects");
@@ -581,7 +597,7 @@
 
             if ((module == "all") || (tn.Name == module))
             {
-                SortedList <string, TypeDeclaration>connectors = TCollectConnectorInterfaces.GetConnectors(tn.Name);
+                SortedList <string, TypeDeclaration>connectors = TCollectConnectorInterfaces.GetConnectors(AOutputPath, tn.Name);
                 CreateClientGlue(tn, connectors, AOutputPath);
             }
         }
